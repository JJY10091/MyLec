*객체 구성 요소(시험출)
(생략가능)
1. 필드 : 공유 변수
2. 생성자 : 객체 생성 시 처음 값 지정
3. getter, setter : 필드에 저장 set, 출력 get
4. 메소드 : disp();  


자바 데이터를 입력하는 방법
1. 필드 직접
2. 생성자
3. setter, getter


1. 메소드 -> 객체(필드, 생성자, 오버로딩...)
2. 고정배열
3. 객체 : 재사용 + 보안(캡슐화)
4. 리스트. 

오버로딩 : 메소드 이름을 하나로 여러 메소드 만들기
1. 생성자 오버로딩
   파일 이름과 생성자 이름은 같아야 하고 
   리턴타입 x

처음 값을 어떻게 초기화, 100
int i = 0;
int i = 100;

Integer i = new Integer();
Integer i = new Integer(100);

2. 메소드 오버로딩

------------------------------------
Member[] m new Member[10];

<이름규칙>
	model(폴더) > Login.java, Member.java
	dto
	entity

	Login 프로그램 : 이메일, 비밀번호
	Login.java : 이메일, 비밀번호
	LoginEx.java(실행파일)


	회원가입 : Member, Register (통상적으로 사용)

	객체 : 이름, 나이, 포인트
	회원가입을 진행하는 main()

	Member.java
	MemberEx.java(실행파일)

계산기 : 이름 규칙 ->    Cals.java(객체)	CalsEx.java(실행파일)

-----------------------------------------------------------------------------

tut05

계산기 : CalEx.java

프로그램에서 return
1. 프로그램 끝 : 문장에 제일 마지막에 사용
2. 값을 사용하는 쪽으로 보내 줄 때

같은 파일 안에서는 
public class 1번만 
=> class 파일 이름

같은 패키지 안에 파일들은 사용이 가능하다

-----------------------------------------------------
LoginEx.java
필드 : 공유 변수



----------------------------------------------------
변수, 객체 초기화

int i = 0; //처음 값으로 0을 출력
int i = 100;

프로그램이 시작될 때
Login I = new Login(0); //객체에 빈 값을 저장
Login I = new Login(100);
Login I = new Login(100,200);
Login I = new Login("koreati","1234");
Login I = new Login("koreait","1234",20);
객체는 여러 변수를 초기화 시킬수 있다.

Login I = new Login(); // default 생성자 -> 생략이 가능
ConstEx.java

this : 현재 페이지
super : 부모 페이지

this() : 


1. 자바에서 필드에 값을 저장하는 방법
직접 필드에 저장 -> 웬만하면 사용  x

RegisterEx.java

생성자를 이용해서 저장

getter, setter 이용해서 저장


BoardEx.java
필드 생성
set 저장, get 출력

public void setUserid(String userid){
	this.userid = userid;
}

public String getUserid(){
	return userid
}

파일 불리해서

1.객체파일 Login2.java

2.실행파일 Login2Ex.java

필드
이메일, 비번, 로그인시간

출력코드
로그인 정보를 출력합니다. > 생성자
이메일, 비번 getter/setter, 
이메일 , 비번, 로그인 시간을 출력할 때는 getter
toString메소드를 이용해서 화면에 출력 



예습할거면 HTML 


































   