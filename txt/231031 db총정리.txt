1. html 반응형 - 전체 사이트(4)
2. javascript (3) -> 추후 spring이랑 연동


DDL
DML
DCL : 보안 -> GRANT(권한 설정), REVOKE(권한 제거)
-------------------------------------------------------------------------------------
1. 계정생성 - root로 접속 후 생성
 (1) 계정 정보 확인 -> mysql 디비 -> user(host, user)
 (2) 계정 이름 = 데이터베이스 이름은 동일하게 생성( 관리자가 부여)
 (3) 계정 생성 후 생성된 디비에 권한 부여

grp계정 , 1234 로 생성
1) grp 디비 생성
2) grp 계정 생성 : create user grp@'%' identified by '1234';
3) 확인 
> use mysql;  
> select host, user from user;
4) 권한부여 : grant all on grp.* to grp@'%' with grant option;
5) flush privileges;
6) 창닫고 접속 
7) mysql -ugrp -p

--------------------------------------------------------------------------------------

<코리아아이티 아카데미 그룹웨어 프로그램>
1. html, css, js -Ajax(Spring 서버 필요?)
화면구성

2. Database 설계
부서명, 직책명, 사원가입, (우편번호검색기?)
게시판환경설정, 게시판, (댓글)

3. Spring Boot (연결?)


---------------------------------------------------------------------------------------------
2. Database 설계
부서명, 직책명, 사원가입, (우편번호검색기?)
게시판환경설정, 게시판, (댓글)

부서 테이블
create table dept(
dept_code char(3) not null,
dept_name varchar(20) not null,
primary key(dept_code)
);

insert into dept values('100', '인사과');
insert into dept values('200', '자재과');
insert into dept values('300', '비서실');
insert into dept values('900', '임원실');

select *from dept;
select count(dept_code) as '부서' from dept;
select *from dept ORDER BY dept_code desc;


직급 테이블
101 인사과장 100

create table pos(
pos_code char(3) not null,
pos_name varchar(10) not null,
dept_code char(3) not null,
primary key(pos_code),
foreign key(dept_code) references dept(dept_code) ON UPDATE cascade ON DELETE restrict
);

직책코드 직책명 부서코드
INSERT INTO pos VALUES('101', '인사과장', '100');
INSERT INTO pos VALUES('103', '사원', '100');

INSERT INTO pos VALUES('301', '비서실장', '300');

INSERT INTO pos VALUES('901', '대표이사', '900');
INSERT INTO pos VALUES('902', '기술이사', '900');

2단 정렬할때는 order by는 한번만 적고 ( , ) 사용한다
select * from pos ORDER BY dept_code DESC, pos_name desc; 

임원실 검색
select * from pos where dept_code = '900';


사원등록 테이블
CREATE TABLE emp(
emp_id int not null auto_increment,
emp_email varchar(50) not null,
emp_passwd varchar(20) not null,
emp_name varchar(10) not null,
pos_code char(3) not null,
primary key(emp_id),
foreign key(pos_code) references pos(pos_code) ON UPDATE cascade ON DELETE restrict
);

INSERT INTO emp VALUES(NULL, '1mail@mail.com', '1111', '홍길동', '101');

인사과(2) 비서실(1) 임원실(2) : join, 일반컬럼 + 집계컬럼 => group by사용

SELECT A.dept_name, COUNT(B.pos_code) FROM dept A INNER JOIN pos B on A.dept_code = B.dept_code
GROUP BY A.dept_name;

3단 JOIN
인사과 인사부장 홍길동 순으로 출력하시오.
t1 INNER JOIN t2 ON t1.pk = t2.fk
INNER JOIN t3 ON t2.pk = t3.fk;

SELECT A.dept_name as '부서', B.pos_name as '직책', C.emp_name as '이름' 
FROM dept A INNER JOIN pos B ON A.dept_code = B.dept_code
INNER JOIN emp C ON B.pos_code = C.pos_code;

사원테이블에서 직책이 '101'이고 사원번호 1번인 사원의 
사원명을 '김철수'로 변경하시오.

UPDATE 테이블명 SET 변경 WHERE 조건 = 값 AND 조건 = 값;
UPDATE emp SET emp_name = '김철수' WHERE pos_code = '101' AND emp_id = 1;

이름이 김철수인 사원의 이메일을 'busan@busan.co.kr', 이름을 '홍길동'으로 변경하시오

UPDATE emp SET emp_email = 'busan@busan.co.kr', emp_name = '홍길동' where emp_name = '김철수';

이메일이 'busan@busan.co.kr' 이거나 비밀번호가 '1111'인 사원의 정보를 삭제하시오.
DELETE FROM emp WHERE emp_email = 'busan@busan.co.kr' OR emp_passwd = '1111';

select *from emp;

View : 논리적(가상) 데이블을 생성해 보안 처리
CREATE VIEW emp_v AS select emp_email, emp_name from emp;

View 제거 
drop view 테이블이름;
drop view emp_v;
show tables;











































































