mysql.com => Mariadb
Oracle
Mssql

---
JDK <- Mysql Connector -> Mysql
	middleware( *.jar - java )

DB설치, middleware 설치
.net framework

DDL : CREATE, DROP
DML : INSERT, SELECT, UPDATE, DELETE


tar - > 그냥 파일 묶음
tar.gz -> tar를 압축

mysql 설치 
포트번호 : 3306 
id : root

환경변수 설정
mysql - bin 폴더 까지

---

서버 : 최고관리자(root) -> 일반계정에 권한 부여

SQL : 구조적 질의어 - Structured Query Language
-ANSI SQL : 모든 데이터베이스에서 공통으로 사용 가능

데이터베이스(큰 폴더) -> 테이블(작은 폴더 : 여러 개 존재 - 실제 데이터가 저장)

*데이터베이스 정의어(DDL) - D Definition L
- 생성(CREATE), 제거(DROP), 변경(ALTER)


use 데이터베이스명; (큰 폴더 안으로 들어가기)


*데이터베이스 조작어(DML) - D Manupulate L
- 입력(INSERT), 검색(SELECT), 수정(UPDATE), 삭제(DELETE)

/* *데이터베이스 제어어(DCL) - D Control L : 보안 - 계정 생성 */

큰 폴더 확인
SHOW DATABASES;
작을폴더 확인
SHOW TABLES;



대문자 -> 소문자 인식
[DB 예제]
*쇼핑몰(데이터베이스 - 큰폴더) : create 데이터베이스명  - SHOP
use SHOP;

타입을 정확하게 명시했는지 확인 => DESC 테이블명;

-회원가입 : 객체(아이디, 이름, 전화번호, 나이...) - SHOP_MEMBER 테이블 : creat 테이블명

CREATE TABLE SHOP_MEMBER(
userid varchar(15),	//공간 변동 크고 최대 15글자
name varchar(10),
tel char(15), 	// 공간 15글자 고정 생성
jumin char(14),
age int,
date date
);

-상품등록 : 객체(상품이름, 가격...) - SHOP_ITEMS 테이블 : creat 테이블명
숫자 INT, 글자는 VARCHAR(저장할 글자수) //String 대신 VARCHAR


*전사적자원관리(ERP) - 데이터베이스
데이터베이스명 K_ERP
use 데이터베이스명;

-사원관리 : Employees 테이블 : K_ERP_EMP 테이블
CREATE TABLE K_ERP_EMP(id int, name varchar(20), salary int, startDate date);

사번(int), 사원명(varchar(5)), 급여(int), 입사일 datetime(date)

-급여관리 : Salary 테이블 : K_ERP_SALARY 테이블
-자제관리 : Stuff 테이블 : K_ERP_STUFF 테이블

테이블 변수명 확인 : DESC 테이블 명

mysqldump -uroot -p 백업할데이터베이스 이름 > 백업이름.확장자 >>> 데이터베이스 백업하는법


mysqldump -uroot -p K_ERP > 20231004_erp.dump

mysqldump -uroot -p K_ERP > 20231004_erp.sql



SHOW DATABASES;

CREATE DATABASE SHOP;

SHOW DATABASES;


내 컴퓨터
- 이름 또는 IP
localhost OR 127.0.0.1 >> 내컴퓨터
도메인:3306  >> 도메인 있는 경우

jdbc:mysql://localhost:3306/shop
jdbc:mysql://도메인

jdbc:mysql://  >> 프로토콜 : 자바와 db연결하겠다


jdbcPrj01
-JDBCPtj01Ex.java

----
쇼핑몰
-회원가입 테이블
 - 회원번호 : INT
 - 회원이름 : VARCHAR
 - 전화번호 : CHAR(13)
 - 포인트 : INT
 - 가입일 : DATE

CREATE TABLE MEMBER(
id int,
name varchar(20),
tel char(13),
point int,
regdate date
);

INSERT INTO MEMBER VALUES(101,'홍길동','010-1234-1234',1000, NOW());  // 글자 ' ' 사용

SELECT *FROM MEMBER;


DDL : CREATE, DROP, ALTER

DML 
테이블 생성 후

INSERT
SELECT
UPDATE
DELETE


---------


제약조건  -- (NOT NULL..>절대 비우면 안됨!)
	 -- unique > 중복된 값 X

쇼핑몰(SHOP)
- 회원가입
  - 이메일
  - 비밀번호
  - 이름
  - 주소

1. MYSQL 접속
2. SHOW DATABASES;

3-1. 미리 생성된 데이터베이스가 있으면 
      USE 데이터베이스명;

3-2. 만들어진 데이터베이스가 없다면
      CREATE DATABASE 이름;
      USE 데이터베이스명;

4. 테이블 이름 확인
SHOW TABLES;

5-1. 테이블 생성 -> 자바에서 필드명과 동일하게 작업
    필드면 만들 때
    DB는 _로 단어를 연결하고
    자바는 카멜 표기법으로 연결
    - 제약 조건을 지정해야한다.
      - NOT NULL : 절대 값이 비면 안되는 필드
    
CREATE TABLE MEMBER(
email varchar(50) NOT NULL,
passwd varchar(15) NOT NULL,
name varchar(10) NOT NULL,
post char(5),
addr1 varchar(100),
addr2 varchar(50)
);

SHOW TABLES;
DESC 테이블명; --테이블 구조확인


5-2. 테이블이 존재한다면...
SHOW TABLES;
DESC 테이블명; --테이블 구조확인

6. CRUD 작업

기본키 (primary key) : 빈값도 허용 x, 중복된 값도 허용x
 -> 유일한 나를 구분해 준다(수정, 삭제, 검색 내 것만 처리가 가능)
unique : 빈값 허용하지만 중복된 값은 허용 x


email varchar(50) NOT NULL unique,

CREATE TABLE MEMBER(
email varchar(50) NOT NULL primary key,
passwd varchar(15) NOT NULL
);

INSERT INTO 테이블명 VALUES(값...);

INSERT INTO MEMBER VALUES
('mail@mail.com', '12324'), 
('mail2@mail.com', '12322'),
('mail3@mail.com', '12354'),

SELECT *FROM MEMBER;

SELECT COUNT(*) FROM MEMBER; -- 사원 수 출력할때
SELECT COUNT(*) AS 회원수 FROM MEMBER; -- 사원 수 출력할때
SELECT COUNT(*) AS '회원 수' FROM MEMBER; -- 사원 수 출력할때 띄어쓰기 포함 ' '


------
CREATE TABLE MEMBER(
id int not null primary key,
name varchar(50),
passwd varchar(10)
);

INSERT INTO MEMBER VALUES
(101,'홍길동','1111'),
(102,'김철수','2222'),
(103,'이영희','3333');

SELECT *FROM MEMBER; -- 출력

DELETE FROM MEMBER; -- 전체 삭제

DELETE FROM MEMBER WHERE id = 101; 

---------------
CREATE TABLE MEMBER(
id int not null auto_increment,
name varchar(10) not null,
passed varchar(20) not null,
primary key(id)
);

INSERT INTO MEMBER VALUES(NULL,'홍길동','1234');
INSERT INTO MEMBER VALUES(NULL,'홍길동','1234');
INSERT INTO MEMBER VALUES(NULL,'홍길동','1234');

SELECT *FROM MEMBER; -- 출력


----------------
UPDATE 테이블명 SET 
바꿀컬럼명 = 값, 바꿀컬럼명2 = 값 
WHERE 조건 = 값;

컬럼명 = 필드

UPDATE MEMBER SET name = '코리아', passed = '4523' WHERE id = 5;


------------------
pk = primary key

입력
INSERT INTO 테이블명 VALUES(값1, 값2...)

삭제
DELETE FROM 테이블명 WHERE pk컬럼 =값;

수정
UPDATE 테이블명 SET 수정할컬럼1=수정값, 수정할컬럼2=수정값... WHERE pk컬럼 = 값;

전체 검색
SELECT * FROM 테이블명;

조건 검색
SELECT * FROM 테이블명 WHERE PK컬럼 = 값;


쇼핑몰(SHOP)

-------------------------------------------------------

회원번호(pk), 회원이름, 비밀번호를 데이터베이스에 저장하는 jdbc 프로그램을 완성하시오.

jdbcPrj02 => JDBCPrj02Ex.java
insert.txt 파일


0. 데이터베이스/테이블 생성 : mydb/register
1. 드라이버 등록
2. Class.forName()
3. url, id, pwd
4. INSERT


//try catch 공부하기..

1 - 9, ㄱ - ㅎ, a - z : ASC : 오름차순
9 - 1, ㅎ - ㄱ, z - a : DESC : 내림차순

ORDER BY id DESC : id를 기준으로 내림차순 :: 사람 읽는 반대방향
ORDER BY id ASC : id를 기준으로 오름차순 :: 사람이 읽는 방향

SELECT * FROM register ORDER BY name DESC;


2단 정렬
홍길동, 서울
홍길동, 부산

SELECT * FROM register ORDER BY name DESC, region ASC;




























