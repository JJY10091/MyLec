join + erd 

쇼핑몰 shopdb

<테이블 여러개, 쇼핑몰 DB설계>

회원가입 users

카트(세션/쿠키에 임시 저장하거나 db에 저장하는 경우) cart
상품구매 buy

카테고리 category
상품등록 product

>
CREATE DATABASE shopdb;

회원가입
CREATE TABLE users(
userid varchar(20) not null,
name varchar(10) not null,
primary key(userid)
);

> 회원가입
INSERT INTO users VALUES('koreait', '홍길동');


카트
create table cart(
pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
cart_id int not null auto_increment,
userid varchar(20) not null,
primary key(cart_id),
foreign key(userid) references users(userid)
);

>
INSERT INTO cart VALUES('101', 'LG IBM Computer', 10, NULL, 'koreait');
INSERT INTO cart VALUES('102', 'Apple IPhine', 15, NULL, 'koreait');

--------------users cart 조인-----------
아이디, 이름, 상품명, 가격을 표시하시오.  (t1 INNER JOIN t2 ON 조건)

SELECT * FROM users U INNER JOIN cart C ON U.userid = C.userid;

SELECT U.userid, U.name, C.pro_name, C.pro_price FROM users U INNER JOIN cart C ON U.userid = C.userid;




상품구매
create table buy(
buy_id int not null auto_increment,
pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
pro_count int,
pro_delivery char(1),
userid varchar(20) not null,
primary key(buy_id),
foreign key(userid) references users(userid)
);

카테고리
create table category(
cate_name varchar(20) not null,
primary key(cate_name)
);

>
INSERT INTO category VALUES('컴퓨터');
INSERT INTO category VALUES('노트북');
INSERT INTO category VALUES('스마트폰');
SELECT COUNT(*) FROM category;

상품등록 
create table product(
pro_num varchar(20) not null,
pro_name varchar(100),
pro_price int,
pro_count int,
cate_name varchar(20) not null,
primary key(pro_num),
foreign key(cate_name) references category(cate_name) ON UPDATE cascade ON DELETE restrict
);

> 상품 등록
INSERT INTO product VALUES('101', 'LG TV', 1, 1, '가전');   >> 오류난다 추가할 수 없음 category가 알맞지 않음
INSERT INTO product VALUES('101', 'LG 컴퓨터', 1, 1, '컴퓨터');

>카테고리 제거해봄
DELETE FROM category WHERE cate_name ='컴퓨터';
>제거하면 오류 남

>카테고리 업데이트
UPDATE category SET cate_name = '컴퓨터2' WHERE cate_name = '컴퓨터';

>업데이트시 상품 카테고리 확인
SELECT * FROM category;
SELECT * FROM product;
> category 이름을 업데이트 하니 product에서도 따라 바뀌는거 확인

>확인했으니 다시 바꾸기
UPDATE category SET cate_name = '컴퓨터' WHERE cate_name = '컴퓨터2';


- 외래키 무결성 제약조건 (부모를 지워버리면 누구를 따라가냐)
update : 대분류를 번경하게 된다면.. 상품을..
foreign키 옵션에 띄어쓰기 포함
ON UPDATE cascade 

delete : 대분류를 삭제하게 된다면..상품을..
ON DELETE restrict

--------------------------------------
연결 table1, table2 연결해서 = 1 > 실제 join은 아님? > 옛날방식 join?
category, product를 연결해서 (c)대분류, 상품번호, 상품명, 구매개수, 가격 순으로 출력
(단, 대분류가 같은 것만 출력하시오)

INSERT INTO product VALUES('102', '갤럭시 21', 2, 2, '스마트폰'); 
>테스트용 상품등록

SELECT * FROM 테이블명

SELECT 
category.cate_name, 
product.pro_num, 
product.pro_name, 
product.pro_count, 
product.pro_price 

FROM category, product;

>너무기네 > 별명 사용해서 다시

SELECT 
C.cate_name, 
P.pro_num, 
P.pro_name, 
P.pro_count, 
P.pro_price 
FROM category C, product P
WHERE C.cate_name = P.cate_name;


조인(******중요*******)

join
inner join 테이블 2개
SELECT 출력컬럼 FROM t1, t2 WHERE t1.컬럼 = t2.컬럼;
= SELECT 출력컬럼 FROM t1 INNER JOIN t2 ON t1.컬럼 = t2.컬럼;

테이블3개
SELECT 출력컬럼 FROM t1 INNER JOIN t2 on t1.컬럼 = t2.컬럼 INNER JOIN t3 ON t2.컬럼 = t3.컬럼;

테이블 2개 조인
분류 테이블 컬럼 전부, 상품 테이블 컬럼 전부를 출력하시오

SELECT C.*, P.* FROM category C INNER JOIN product P ON C.cate_name = P.cate_name;
SELECT C.*, P.* FROM category C INNER JOIN product P ON C.cate_name = P.cate_name;


분류 테이블의 분류 컬럼과 상품 테이블의 상품번호, 상품이름만 출력하시오.
(t1 INNER JOIN t2 ON 조건)

SELECT C.cate_name, P.pro_num, P.pro_name FROM category C INNER JOIN product P ON C.cate_name = P.cate_name;



-----------------------------------------------------------------------------------------------
다중 게시판 만들기
config(게시판 설정)

code 디비 테이블 이름 = notice -> creat table notice();

create table config(
code varchar(20) not null,
title varchar(100) not null,
color varchar(20) not null,
primary key(code)
);

board(게시판)

create table notice_board(
b_id int not null auto_increment,
subject varchar(100) not null,
name varchar(10),
content text,
regdate date,
code varchar(20) not null,
primary key(b_id),
foreign key(code) references config(code) ON UPDATE CASCADE ON DELETE RESTRICT
);




























































































