1. 아래 그림과 같이 데이터베이스 /  테이블을 완성하시오.

- 아래 그림을 확인 후 데이터베이스 및 테이블을 생성하고 그림과 동일하게 테이블에 데이터를 입력하시오.
- 작성 후 백업 파일이 아닌 메모장 또는 텍스트 편집 창에 작성 후 작성 파일을 첨부 파일로 업로드 하시오.
- 파일은 “20231108_홍길동.txt”로 저장 후 첨부파일로 업로드 하시오.
*** 입력값 부정확시 1개당 2점 5개 이상이면 10점 감점으로 처리

create database testdb;
use testdb;

create table university(
univ_code char(3) not null,
univ_name varchar(20),
primary key(univ_code)
);

insert into university values('002','코리아대학교(서울)');
insert into university values('051','코리아대학교(부산)');

create table major(
major_id int not null auto_increment,
major_code char(3) not null,
major_name varchar(10) not null,
univ_code char(3) not null,
primary key(major_id),
foreign key(univ_code)references university(univ_code)
);

insert into major values(null,'100','철학과','002');
insert into major values(null,'200','법학과','002');
insert into major values(null,'300','경영학과','002');
insert into major values(null,'400','물리학과','002');
insert into major values(null,'500','천문학과','002');
insert into major values(null,'100','특수교육과','051');
insert into major values(null,'200','지리교육과','051');
insert into major values(null,'300','중어중문학과','051');
insert into major values(null,'400','유아교육과','051');
insert into major values(null,'500','윤리교육과','051');
insert into major values(null,'600','의류학과','051');
insert into major values(null,'700','통계학과','051');
insert into major values(null,'800','조경학과','051');

create table student(
std_id char(3) not null,
std_name varchar(10) not null,
std_email varchar(20) not null,
std_passwd varchar(10) not null,
std_score int not null,
std_addr varchar(10),
std_regdate varchar(20) not null,
major_id int not null,
primary key(std_id),
foreign key(major_id)references major(major_id)
);

insert into student values('001', '홍길동' , 'hong@mail.co.kr' , '1234' , 88 , '경기도 시흥시' , '2020-03-03 00:00:00', 1);
insert into student values('002', '김경호' , 'kkh@mail.co.kr' , '1111' , 97 , '전라북도 정읍시' , '2001-03-06 00:00:00', 1);
insert into student values('003', '고성훈' , 'gochang@mail.co.kr' , '0000' , 100 , '경상남도 김해시' , '1988-07-01 00:00:00', 2);
insert into student values('004', '김영주' , 'kyj@mail.co.kr' , '1212' , 66 , '경기도 포천시' , '2000-12-23 00:00:00', 3);
insert into student values('005', '허성민' , 'heo@mail.co.kr' , '4444' , 65 , '경기도 연천군' , '2020-06-01 00:00:00', 3);
insert into student values('006', '이은주' , 'lee@mail.co.kr' , '7777' , 72 , '경기도 성남시' , '2011-01-01 00:00:00', 3);
insert into student values('007', '스티브 호킹' , 'steve@mail.co.kr' , '7474' , 99 , '서울특별시' , '2022-01-01 00:00:00', 4);
insert into student values('008', '강영수' , 'orbit@mail.co.kr' , '8888' , 99 , '경기도 수원시' , '2022-01-01 00:00:00', 5);
insert into student values('009', '김현정' , 'khj@mail.co.kr' , '5555' , 82 , '대전광역시' , '2011-11-11 00:00:00', 6);
insert into student values('100', '김칠현' , 'kim7@mail.co.kr' , '6666' , 83 , '충청남도 공주시' , '2022-01-01 00:00:00', 7);
insert into student values('101', '표진영' , 'jyp@mail.co.kr' , '1875' , 88 , '강원도 원주시' , '2023-11-05 00:00:00', 7);
insert into student values('102', '박시형' , 'shbang@mail.co.kr' , '1977' , 97 , '경상북도 울진시' , '2023-01-05 00:00:00', 7);
insert into student values('103', '곽연결' , 'master@mail.co.kr' , '2488' , 71 , '' , '2015-08-05 00:00:00', 8);
insert into student values('104', '정선생' , 'frijeong@mail.co.kr' , '3333' , 82 , '대구광역시' , '2012-12-12 00:00:00', 9);
insert into student values('105', '성태연' , 'tjsung@mail.co.kr' , '8484' , 84 , '광주광역시' , '2012-12-12 00:00:00', 9);
insert into student values('106', '송태희' , 'songsong@mail.co.kr' , '6262' , 100 , '부산광역시' , '2012-12-12 00:00:00', 11);
insert into student values('107', '남상식' , 'betnam@mail.co.kr' , '1212' , 74 , '전라북도 전주시' , '2023-10-09 00:00:00', 12);
insert into student values('108', '박상민' , 'number1@mail.co.kr' , '5555' , 81 , '전라북도 익산시' , '2002-10-12 00:00:00', 12);
insert into student values('109', '김무부' , 'bird@mail.co.kr' , '8998' , 89 , '부산광역시' , '2023-05-05 00:00:00', 13);


select A.major_code as '학과코드' A.major_name as '학과명' count(B.std_name) as '학생 수' from major A inner join student B on A.major_id = B.major_id;


SELECT com_buseo, count(com_name) FROM company
GROUP BY com_buseo
ORDER BY com_buseo ASC;

SELECT major_code, major_name, count(major_name) FROM major
GROUP BY major_code;
ORDER BY com_buseo ASC;

select major_code



SELECT major.major_code as '학과코드', major.major_name as '학과명', count(student.major_id) as '학생 수' FROM major INNER JOIN student ON major.major_id = student.major_id
GROUP BY major.major_code, major.major_name;




