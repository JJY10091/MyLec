
heidisql.com

 - GUI 환경에서 데이터베이스 관리하는 툴

---------------------------------------------------------------------------------
1. 개발 프로그램(groupware -> grpdb -> 테이블(회원...)) 순서
 (1) View 구성(html, css, js)	
 (2) form(input) 되어 있는  view -> db생성 -> 테이블 생성
 (3) 테이블 확인 후 객체 생성
 (4) Spring에서 환경 설정 후 작업

2. grpdb 테이블 (member)
use grpdb;

CREATE TABLE employees(
emp_id int not null auto_increment,
emp_name varchar(5) not null,
emp_salary int(4) not null,
emp_hire date,
primary key(emp_id)
)auto_increment=100; 

데이블 구조 : describe employees; -> desc로 사용해도 됨

INSERT INTO employees VALUES(NULL, '홍길동', 5, now());
INSERT INTO employees VALUES(NULL, '이영희', 100, now());
INSERT INTO employees VALUES(NULL, '김철수', 20, now());

SELECT ~ WHERE ~ ORDER BY ~ LIMIT
ASC 오름
DESC 내림

SELECT * FROM employees ORDER BY emp_id DESC;

* 집계함수는 결과가 1만 출력되므로 ORDER BY, LIMIT 사용X
COUNT, DISTINCT, SUM, AVG, MAX, MIN

SELECT COUNT (*) AS '사원수' FROM employees;
SELECT COUNT(*) AS total FROM employees;

SELECT SUM(emp_salary) as '급여의 총합' FROM employees;

------------------------------------------------

이름과 급여만 출력하시오
(단, 이름의 오름차순으로 정렬하시오.)

SELECT emp_name, emp_salary FROM employees ORDER BY emp_name ASC;

회원번호, 이름, 입사일을 출력하시오
(단, 입사일이 2023년 01월 01일 이전에 입사한 사원만 출력하시오)
SELECT emp_id, emp_name, emp_hire FROM employees WHERE emp_hire <= '2023-01-01';

SELECT COUNT(*) AS '검색된 회원수' FROM employees WHERE emp_hire <= '2023-01-01';


2022 ~ 2023년에 입사한 직원의 수를 구하시오 -> 2022-01-01  : 띄어쓰기 , 날짜 포멧을 저장된 포멧과 동일하게
SELECT COUNT(*) AS '검색된 회원수' FROM employees 
WHERE '2022-01-01' <= emp_hire AND emp_hire <= '2023-01-01';

SELECT COUNT(*) AS '2023년에 입사한 회원수' FROM employees 
WHERE emp_hire >= '2023-01-01' AND emp_hire <= '2023-12-31';

컬럼이름 Between 조건1 AND 조건2;'

2023년에 입사한 직원의 이름을 출력하시오
단, 이름을 기준으로 내림차순으로 정렬하시오
SELECT emp_name FROM employees 
WHERE emp_hire Between '2023-01-01' AND '2023-12-31' ORDER BY emp_name desc;


--------------------------------------------------------------------------------------------------------

데이터와 데이터를 연결

concat(데이터1, 데이터2)

연습 출력
SELECT concat('010', '1234') as 'tel';
SELECT concat('010', '-', '1234') as 'tel';
SELECT concat('010', '-', '1234','-','5678') as 'tel';


100 홍길동
SELECT concat(emp_id, ' ', emp_name) as '사원정보 출력' FROM employees;

급여가 천만원 이상인 직원의 사번과 이름을 출력하시오
*단위(백만원)

SELECT emp_id, emp_name from employees WHERE emp_salary >= 10;

일치
사번이 101이고 이름이 홍길동인 사람의 사원정보를 출력하시오
SELECT * FROM employees WHERE emp_id = 101 AND emp_name ='홍길동' ;


유사 : WHERE 컬럼명 LIKE '%검색어%';
이름에 '철'이 포함되어 있는 사람의 이름을 출력하시오
SELECT emp_name from employees WHERE emp_name LIKE '%철%';

SELECT emp_name from employees WHERE emp_name LIKE '%철%' and emp_name LIKE '%김%';

성이 '김'씨 인 사람이 몇명입니까
SELECT COUNT(*) AS '김씨 직원 수' from employees WHERE emp_name LIKE '김%';
SELECT concat('검색된 회원은 ', count(*), '명') from employees WHERE emp_name LIKE '김%';

SELECT * FROM employees;

사원을 아이디의내림차순으로 정렬하고 최근에 입사한 2명만 출력하시오.

SELECT * FROM employees ORDER BY emp_id DESC LIMIT 2;

SELECT * FROM employees ORDER BY emp_id DESC LIMIT 0, 2;
LIMIT 배열시작번호(0부터 시작), 개수


사원을 아이디의내림차순으로 정렬하고 입사일이 제일 오래된 회원을 출력하시오.
SELECT * FROM employees ORDER BY emp_id DESC LIMIT 1,2;


-------------------------------------------------------------------------------------------
카테고리+개수 출력 (어려움)
-GROUP BY 컬럼명;

 - car 테이블에서 


SELECT 회사명, 집계함수 FROM car
GROUP BY 회사명;

SELECT 이름, 집계함수 FROM car
GROUP BY 이름;

>

현대차(3), 기아차(5), 쌍용차(2)

CREATE TABLE car(
company varchar(20) not null,
carName varchar(20) not null
);

INSERT INTO car VALUES('현대차', '아반떼');
INSERT INTO car VALUES('현대차', '소나타');
INSERT INTO car VALUES('현대차', '제네시스');

INSERT INTO car VALUES('기아차', '모닝');
INSERT INTO car VALUES('기아차', 'K3');
INSERT INTO car VALUES('기아차', 'K5');
INSERT INTO car VALUES('기아차', 'K7');
INSERT INTO car VALUES('기아차', 'K9');

INSERT INTO car VALUES('쌍용차', '렉스턴');
INSERT INTO car VALUES('쌍용차', '티볼리');


등록된 전체 차종의 수는 10입니다.

SELECT COUNT(*) AS '등록된 전체 차종의 수는' FROM car;

SELECT company, COUNT(*) AS cnt FROM car
GROUP BY company
ORDER BY company ASC;

요약된 회사의 차량 개수가 5보다 큰 것만 표시하시오

GROUP BY 일반컬럼 Having 앞에서 표시한 집계함수
>순차적으로 

SELECT * FROM car;
SELECT company, count(*) FROM car;
SELECT company, count(*) FROM car GROUP BY company;
SELECT company, count(*) FROM car GROUP BY company HAVING count(*) >= 5;
SELECT company, count(*) as '재고가 많은 차/수량' FROM car GROUP BY company HAVING count(*) >= 5;
SELECT company, count(*) as 'cnt' FROM car GROUP BY company HAVING count(*) >= 5;

최종
SELECT company, count(*) as 'cnt' 
FROM car 
GROUP BY company 
HAVING count(*) >= 5 
ORDER BY company LIMIT 0, 1;











ex)
itemName, 집계합수 => group by;
=>
SELECT itemName, COUNT(*) AS cnt FROM items(=테이블명);
GROUP BY itemName
ORDER BY itemName ASC;

요약된 회사의 차량 개수가 5보다 큰 것만 표시하시오

-----------------------------------------------------------------------------
HTML

tut09
login.html-로그인예제

onclick();
addEventListener();


fonts.google.com -> A1 폰트
images.google.com

script

frmCheck.js

reset.css
style.css





































